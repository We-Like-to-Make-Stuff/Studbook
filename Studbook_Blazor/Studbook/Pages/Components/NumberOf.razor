@inject IJSRuntime js;

<div class="number-of">
    <input @ref=InputElem class="input-number" type="number" @onchange=ValueChanged min="0" max="100"/>
    <div class="up" @ref=UpElem>
        <i class="ph-bold ph-caret-up"></i>
    </div>
    <div class="down" @ref=DownElem>
        <i class="ph-bold ph-caret-down"></i>
    </div>
</div>

@code {
    private IJSObjectReference jsModule = null!;

    private ElementReference InputElem;
    private ElementReference UpElem;
    private ElementReference DownElem;

    [Parameter]
    public EventCallback<string?> OnChange { get; set; }

    private async Task ValueChanged(ChangeEventArgs e)
    {
        await OnChange.InvokeAsync(e.Value as string);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsModule = await js.InvokeAsync<IJSObjectReference>("import", "./Pages/Components/NumberOf.razor.js");
            await jsModule.InvokeVoidAsync("NumberOf.Init", InputElem, UpElem, DownElem);
        }
    }
}
